services:
  database:
    image: postgres:17.4
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7.4.2
    container_name: cache
    restart: always
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: broker
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build: .
    container_name: backend
    command: [ "./wait-for-it.sh", "database:5432", "--",
               "sh", "-c", "python manage.py migrate && uwsgi --ini /code/config/uwsgi/uwsgi.ini" ]
    restart: always
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - cache
      - rabbitmq
      - database

  nginx:
    image: nginx:1.27.4
    container_name: nginx
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - .:/code
    ports:
      - "80:80"

volumes:
  database: